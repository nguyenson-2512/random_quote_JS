{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["COLORS_ARRAY","App","useState","quote","setQuote","author","setAuthor","randomNumber","setRandomNumber","quotesData","setQuotesData","randomColor","setRandomColor","urlData","fetchData","url","a","fetch","response","json","parsedData","quotes","console","log","useEffect","handleNewQuote","Math","floor","random","length","className","style","backgroundColor","color","id","title","href","encodeURI","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAiEA,IAAMA,EAAe,CACnaC,EArKf,WAAgB,IAAD,EACaC,mBAAS,kDADtB,mBACNC,EADM,KACCC,EADD,OAEeF,mBAAS,oBAFxB,mBAENG,EAFM,KAEEC,EAFF,OAG2BJ,mBAAS,GAHpC,mBAGNK,EAHM,KAGQC,EAHR,OAIuBN,mBAAS,IAJhC,mBAINO,EAJM,KAIMC,EAJN,OAKyBR,mBAAS,WALlC,mBAKNS,EALM,KAKOC,EALP,KAOPC,EACJ,yIAEIC,EAAS,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACOC,MAAMF,GADb,cACVG,EADU,gBAESA,EAASC,OAFlB,OAEVC,EAFU,OAGhBV,EAAcU,EAAWC,QACzBC,QAAQC,IAAId,GAJI,2CAAH,sDAOfe,qBAAU,WACRV,EAAUD,KACT,CAACA,IAEJ,IAIMY,EAAiB,WAHrBjB,EAAgBkB,KAAKC,MAAMD,KAAKE,SAAWnB,EAAWoB,SAKtDzB,EAASK,EAAWF,GAAcJ,OAClCG,EAAUG,EAAWF,GAAcF,QACnCO,EAAeZ,EAAaO,KAG9B,OACE,qBAAKuB,UAAU,MAAMC,MAAO,CAACC,gBAAiBrB,EAAasB,MAAOtB,GAAlE,SACE,sBAAKuB,GAAG,YAAR,UACE,oBAAGJ,UAAU,aAAb,UACE,sBAAMA,UAAU,aAAhB,eACC3B,KAEH,oBAAG2B,UAAU,eAAb,eAA+BzB,KAC/B,sBAAKyB,UAAU,UAAf,UACE,mBACEC,MAAO,CAACC,gBAAiBrB,EAAasB,MAAO,SAC7CH,UAAU,SACVI,GAAG,cACHC,MAAM,oBACNC,KAAMC,UAAU,yCAAD,OAA0ClC,EAA1C,YAAmDE,IALpE,qBAQA,mBACE0B,MAAO,CAACC,gBAAiBrB,EAAasB,MAAO,SAC7CH,UAAU,SACVI,GAAG,YACHI,QAAS,kBAAMb,KAJjB,gCCxCKc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7da76787.chunk.js","sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [quote, setQuote] = useState(\"I would rather die of passion than of boredom.\");\n  const [author, setAuthor] = useState(\"Vincent van Gogh\");\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quotesData, setQuotesData] = useState([]);\n  const [randomColor, setRandomColor] = useState(\"#bf6565\")\n\n  const urlData =\n    \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\n  const fetchData = async (url) => {\n    const response = await fetch(url);\n    const parsedData = await response.json();\n    setQuotesData(parsedData.quotes);\n    console.log(quotesData);\n  };\n\n  useEffect(() => {\n    fetchData(urlData);\n  }, [urlData]);\n\n  const generateRandomNumber = () => {\n    setRandomNumber(Math.floor(Math.random() * quotesData.length));\n  };\n\n  const handleNewQuote = () => {\n    generateRandomNumber();\n    setQuote(quotesData[randomNumber].quote);\n    setAuthor(quotesData[randomNumber].author);\n    setRandomColor(COLORS_ARRAY[randomNumber])\n  };\n\n  return (\n    <div className=\"App\" style={{backgroundColor: randomColor, color: randomColor }}>\n      <div id=\"quote-box\">\n        <p className=\"quote-text\">\n          <span className=\"quote-left\">\"</span>\n          {quote}\n        </p>\n        <p className=\"quote-author\">- {author}</p>\n        <div className=\"buttons\">\n          <a\n            style={{backgroundColor: randomColor, color: 'white'}}\n            className=\"button\"\n            id=\"tweet-quote\"\n            title=\"Tweet this quote!\"\n            href={encodeURI(`https://twitter.com/intent/tweet?text=${quote}-${author}`)}>\n            Tweeter\n          </a>\n          <a\n            style={{backgroundColor: randomColor, color: 'white'}}\n            className=\"button\"\n            id=\"new-quote\"\n            onClick={() => handleNewQuote()}\n            >\n            New quote\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\nconst COLORS_ARRAY = [\n  \"#FF6633\",\n  \"#FFB399\",\n  \"#FF33FF\",\n  \"#FFFF99\",\n  \"#00B3E6\",\n  \"#E6B333\",\n  \"#3366E6\",\n  \"#999966\",\n  \"#99FF99\",\n  \"#B34D4D\",\n  \"#80B300\",\n  \"#809900\",\n  \"#E6B3B3\",\n  \"#6680B3\",\n  \"#66991A\",\n  \"#FF99E6\",\n  \"#CCFF1A\",\n  \"#FF1A66\",\n  \"#E6331A\",\n  \"#33FFCC\",\n  \"#66994D\",\n  \"#B366CC\",\n  \"#4D8000\",\n  \"#B33300\",\n  \"#CC80CC\",\n  \"#66664D\",\n  \"#991AFF\",\n  \"#E666FF\",\n  \"#4DB3FF\",\n  \"#1AB399\",\n  \"#E666B3\",\n  \"#33991A\",\n  \"#CC9999\",\n  \"#B3B31A\",\n  \"#00E680\",\n  \"#4D8066\",\n  \"#809980\",\n  \"#E6FF80\",\n  \"#1AFF33\",\n  \"#999933\",\n  \"#FF3380\",\n  \"#CCCC00\",\n  \"#66E64D\",\n  \"#4D80CC\",\n  \"#9900B3\",\n  \"#E64D66\",\n  \"#4DB380\",\n  \"#FF4D4D\",\n  \"#99E6E6\",\n  \"#6666FF\",\n  \"#FF6633\",\n  \"#FFB399\",\n  \"#FF33FF\",\n  \"#FFFF99\",\n  \"#00B3E6\",\n  \"#E6B333\",\n  \"#3366E6\",\n  \"#999966\",\n  \"#99FF99\",\n  \"#B34D4D\",\n  \"#80B300\",\n  \"#809900\",\n  \"#E6B3B3\",\n  \"#6680B3\",\n  \"#66991A\",\n  \"#FF99E6\",\n  \"#CCFF1A\",\n  \"#FF1A66\",\n  \"#E6331A\",\n  \"#33FFCC\",\n  \"#66994D\",\n  \"#B366CC\",\n  \"#4D8000\",\n  \"#B33300\",\n  \"#CC80CC\",\n  \"#66664D\",\n  \"#991AFF\",\n  \"#E666FF\",\n  \"#4DB3FF\",\n  \"#1AB399\",\n  \"#E666B3\",\n  \"#33991A\",\n  \"#CC9999\",\n  \"#B3B31A\",\n  \"#00E680\",\n  \"#4D8066\",\n  \"#809980\",\n  \"#E6FF80\",\n  \"#1AFF33\",\n  \"#999933\",\n  \"#FF3380\",\n  \"#CCCC00\",\n  \"#66E64D\",\n  \"#4D80CC\",\n  \"#9900B3\",\n  \"#E64D66\",\n  \"#4DB380\",\n  \"#FF4D4D\",\n  \"#99E6E6\",\n  \"#6666FF\",\n];\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}